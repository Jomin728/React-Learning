{"ast":null,"code":"import { configureStore, createSlice, createAction } from \"@reduxjs/toolkit\";\nconst reset = createAction('app/reset');\nconst songsSlice = createSlice({\n  name: 'song',\n  initialState: [],\n  reducers: {\n    addSong(state, action) {\n      state.push(action.payload);\n    },\n    removeSong(state, action) {\n      const index = state.indexOf(action.payload);\n      state.splice(index, 1);\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase('app/reset', (state, action) => {\n      return [];\n    });\n    //  builder.addCase('movie/reset',(state,action)=>{\n    //    return [];\n    //  })\n  }\n});\nconst moviesSlice = createSlice({\n  name: 'movie',\n  initialState: [],\n  reducers: {\n    addMovie(state, action) {\n      state.push(action.payload);\n    },\n    removeMovie(state, action) {\n      const index = state.indexOf(action.payload);\n      state.splice(index, 1);\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    songs: songsSlice.reducer,\n    movies: moviesSlice.reducer\n  }\n});\n// console.log(store)\nconst startingState = store.getState();\n// console.log(startingState)\n\nstore.dispatch({\n  type: 'song/addSong',\n  payload: 'New Song !!!'\n});\nconst finalState = store.getState();\nexport { store };\nexport const {\n  addSong,\n  removeSong\n} = songsSlice.actions;\nexport const {\n  addMovie,\n  removeMovie\n} = moviesSlice.actions;\n\n// console.log(finalState);\n\n// console.log(songsSlice.actions.addSong())","map":{"version":3,"names":["configureStore","createSlice","createAction","reset","songsSlice","name","initialState","reducers","addSong","state","action","push","payload","removeSong","index","indexOf","splice","extraReducers","builder","addCase","moviesSlice","addMovie","removeMovie","store","reducer","songs","movies","startingState","getState","dispatch","type","finalState","actions"],"sources":["/Users/jominrajeshk/Documents/GitHub/React-Learning/redux-toolkit/src/store/index.js"],"sourcesContent":["import { configureStore,createSlice,createAction } from \"@reduxjs/toolkit\";\n\nconst reset = createAction('app/reset')\n\nconst songsSlice = createSlice({\n    name:'song',\n    initialState:[],\n    reducers:{\n        addSong(state,action)\n        {\n           state.push(action.payload)\n        },\n        removeSong(state,action)\n        {\n         const index = state.indexOf(action.payload)\n        state.splice(index,1)\n        }\n\n    },\n    extraReducers(builder){\n        builder.addCase('app/reset',(state,action)=>{\n            return []\n        })\n    //  builder.addCase('movie/reset',(state,action)=>{\n    //    return [];\n    //  })\n    }\n})\n\nconst moviesSlice = createSlice({\n    name:'movie',\n    initialState:[],\n    reducers:{\n        addMovie(state,action){\n            state.push(action.payload)\n        },\n        removeMovie(state,action)\n        {\n         const index = state.indexOf(action.payload)\n        state.splice(index,1)\n        }\n    }\n})\n\nconst store = configureStore({\n    reducer:{\n        songs:songsSlice.reducer,\n        movies:moviesSlice.reducer  \n    }\n})\n// console.log(store)\nconst startingState = store.getState()\n// console.log(startingState)\n\nstore.dispatch({\n    type:'song/addSong',\n    payload: 'New Song !!!'\n})\n\nconst finalState = store.getState();\nexport {store}\nexport const {addSong,removeSong} = songsSlice.actions\nexport const {addMovie,removeMovie} = moviesSlice.actions\n\n\n\n// console.log(finalState);\n\n// console.log(songsSlice.actions.addSong())"],"mappings":"AAAA,SAASA,cAAc,EAACC,WAAW,EAACC,YAAY,QAAQ,kBAAkB;AAE1E,MAAMC,KAAK,GAAGD,YAAY,CAAC,WAAW,CAAC;AAEvC,MAAME,UAAU,GAAGH,WAAW,CAAC;EAC3BI,IAAI,EAAC,MAAM;EACXC,YAAY,EAAC,EAAE;EACfC,QAAQ,EAAC;IACLC,OAAOA,CAACC,KAAK,EAACC,MAAM,EACpB;MACGD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC7B,CAAC;IACDC,UAAUA,CAACJ,KAAK,EAACC,MAAM,EACvB;MACC,MAAMI,KAAK,GAAGL,KAAK,CAACM,OAAO,CAACL,MAAM,CAACE,OAAO,CAAC;MAC5CH,KAAK,CAACO,MAAM,CAACF,KAAK,EAAC,CAAC,CAAC;IACrB;EAEJ,CAAC;EACDG,aAAaA,CAACC,OAAO,EAAC;IAClBA,OAAO,CAACC,OAAO,CAAC,WAAW,EAAC,CAACV,KAAK,EAACC,MAAM,KAAG;MACxC,OAAO,EAAE;IACb,CAAC,CAAC;IACN;IACA;IACA;EACA;AACJ,CAAC,CAAC;AAEF,MAAMU,WAAW,GAAGnB,WAAW,CAAC;EAC5BI,IAAI,EAAC,OAAO;EACZC,YAAY,EAAC,EAAE;EACfC,QAAQ,EAAC;IACLc,QAAQA,CAACZ,KAAK,EAACC,MAAM,EAAC;MAClBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC9B,CAAC;IACDU,WAAWA,CAACb,KAAK,EAACC,MAAM,EACxB;MACC,MAAMI,KAAK,GAAGL,KAAK,CAACM,OAAO,CAACL,MAAM,CAACE,OAAO,CAAC;MAC5CH,KAAK,CAACO,MAAM,CAACF,KAAK,EAAC,CAAC,CAAC;IACrB;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMS,KAAK,GAAGvB,cAAc,CAAC;EACzBwB,OAAO,EAAC;IACJC,KAAK,EAACrB,UAAU,CAACoB,OAAO;IACxBE,MAAM,EAACN,WAAW,CAACI;EACvB;AACJ,CAAC,CAAC;AACF;AACA,MAAMG,aAAa,GAAGJ,KAAK,CAACK,QAAQ,CAAC,CAAC;AACtC;;AAEAL,KAAK,CAACM,QAAQ,CAAC;EACXC,IAAI,EAAC,cAAc;EACnBlB,OAAO,EAAE;AACb,CAAC,CAAC;AAEF,MAAMmB,UAAU,GAAGR,KAAK,CAACK,QAAQ,CAAC,CAAC;AACnC,SAAQL,KAAK;AACb,OAAO,MAAM;EAACf,OAAO;EAACK;AAAU,CAAC,GAAGT,UAAU,CAAC4B,OAAO;AACtD,OAAO,MAAM;EAACX,QAAQ;EAACC;AAAW,CAAC,GAAGF,WAAW,CAACY,OAAO;;AAIzD;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}