{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst songsSlice = createSlice({\n  name: 'song',\n  initialState: [],\n  reducers: {\n    addSong(state, action) {\n      state.push(action.payload);\n    },\n    removeSong(state, action) {}\n  }\n});\nconst store = configureStore({\n  reducer: {\n    songs: songsSlice.reducer\n  }\n});\nconsole.log(store);\nconst startingState = store.getState();\nconsole.log(startingState);\nstore.dispatch({\n  type: 'song/addSong',\n  payload: 'New Song !!!'\n});","map":{"version":3,"names":["configureStore","createSlice","songsSlice","name","initialState","reducers","addSong","state","action","push","payload","removeSong","store","reducer","songs","console","log","startingState","getState","dispatch","type"],"sources":["/Users/jominrajeshk/Documents/GitHub/React-Learning/redux-toolkit/src/store/index.js"],"sourcesContent":["import { configureStore,createSlice } from \"@reduxjs/toolkit\";\n\nconst songsSlice = createSlice({\n    name:'song',\n    initialState:[],\n    reducers:{\n        addSong(state,action)\n        {\n           state.push(action.payload)\n        },\n        removeSong(state,action)\n        {\n\n        }\n\n    }\n})\n\nconst store = configureStore({\n    reducer:{\n        songs:songsSlice.reducer\n    }\n})\nconsole.log(store)\nconst startingState = store.getState()\nconsole.log(startingState)\n\nstore.dispatch({\n    type:'song/addSong',\n    payload: 'New Song !!!'\n})"],"mappings":"AAAA,SAASA,cAAc,EAACC,WAAW,QAAQ,kBAAkB;AAE7D,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAC3BE,IAAI,EAAC,MAAM;EACXC,YAAY,EAAC,EAAE;EACfC,QAAQ,EAAC;IACLC,OAAOA,CAACC,KAAK,EAACC,MAAM,EACpB;MACGD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC7B,CAAC;IACDC,UAAUA,CAACJ,KAAK,EAACC,MAAM,EACvB,CAEA;EAEJ;AACJ,CAAC,CAAC;AAEF,MAAMI,KAAK,GAAGZ,cAAc,CAAC;EACzBa,OAAO,EAAC;IACJC,KAAK,EAACZ,UAAU,CAACW;EACrB;AACJ,CAAC,CAAC;AACFE,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;AAClB,MAAMK,aAAa,GAAGL,KAAK,CAACM,QAAQ,CAAC,CAAC;AACtCH,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;AAE1BL,KAAK,CAACO,QAAQ,CAAC;EACXC,IAAI,EAAC,cAAc;EACnBV,OAAO,EAAE;AACb,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}